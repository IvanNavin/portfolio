!(function (e) {
  if (typeof exports === 'object' && typeof module !== 'undefined') module.exports = e();
  else if (typeof define === 'function' && define.amd) define([], e);
  else {
    (typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : typeof self !== 'undefined'
      ? self
      : this
    ).emailjs = e();
  }
})(() =>
  (function i(u, s, c) {
    function a(t, e) {
      if (!s[t]) {
        if (!u[t]) {
          const n = typeof require === 'function' && require;
          if (!e && n) return n(t, !0);
          if (l) return l(t, !0);
          const r = new Error(`Cannot find module '${t}'`);
          throw ((r.code = 'MODULE_NOT_FOUND'), r);
        }
        const o = (s[t] = { exports: {} });
        u[t][0].call(o.exports, (e) => a(u[t][1][e] || e), o, o.exports, i, u, s, c);
      }
      return s[t].exports;
    }
    for (var l = typeof require === 'function' && require, e = 0; e < c.length; e++) a(c[e]);
    return a;
  })(
    {
      1: [
        function (e, t, n) {
          let r;
          let o;
          const i = (t.exports = {});
          function u() {
            throw new Error('setTimeout has not been defined');
          }
          function s() {
            throw new Error('clearTimeout has not been defined');
          }
          function c(t) {
            if (r === setTimeout) return setTimeout(t, 0);
            if ((r === u || !r) && setTimeout) return (r = setTimeout), setTimeout(t, 0);
            try {
              return r(t, 0);
            } catch (e) {
              try {
                return r.call(null, t, 0);
              } catch (e) {
                return r.call(this, t, 0);
              }
            }
          }
          !(function () {
            try {
              r = typeof setTimeout === 'function' ? setTimeout : u;
            } catch (e) {
              r = u;
            }
            try {
              o = typeof clearTimeout === 'function' ? clearTimeout : s;
            } catch (e) {
              o = s;
            }
          })();
          let a;
          let l = [];
          let f = !1;
          let d = -1;
          function p() {
            f && a && ((f = !1), a.length ? (l = a.concat(l)) : (d = -1), l.length && m());
          }
          function m() {
            if (!f) {
              const e = c(p);
              f = !0;
              for (let t = l.length; t; ) {
                for (a = l, l = []; ++d < t; ) a && a[d].run();
                (d = -1), (t = l.length);
              }
              (a = null),
                (f = !1),
                (function (t) {
                  if (o === clearTimeout) return clearTimeout(t);
                  if ((o === s || !o) && clearTimeout) return (o = clearTimeout), clearTimeout(t);
                  try {
                    o(t);
                  } catch (e) {
                    try {
                      return o.call(null, t);
                    } catch (e) {
                      return o.call(this, t);
                    }
                  }
                })(e);
            }
          }
          function h(e, t) {
            (this.fun = e), (this.array = t);
          }
          function v() {}
          (i.nextTick = function (e) {
            const t = new Array(arguments.length - 1);
            if (arguments.length > 1) for (let n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
            l.push(new h(e, t)), l.length !== 1 || f || c(m);
          }),
            (h.prototype.run = function () {
              this.fun.apply(null, this.array);
            }),
            (i.title = 'browser'),
            (i.browser = !0),
            (i.env = {}),
            (i.argv = []),
            (i.version = ''),
            (i.versions = {}),
            (i.on = v),
            (i.addListener = v),
            (i.once = v),
            (i.off = v),
            (i.removeListener = v),
            (i.removeAllListeners = v),
            (i.emit = v),
            (i.prependListener = v),
            (i.prependOnceListener = v),
            (i.listeners = function (e) {
              return [];
            }),
            (i.binding = function (e) {
              throw new Error('process.binding is not supported');
            }),
            (i.cwd = function () {
              return '/';
            }),
            (i.chdir = function (e) {
              throw new Error('process.chdir is not supported');
            }),
            (i.umask = function () {
              return 0;
            });
        },
        {},
      ],
      2: [
        function (e, t, n) {
          (function (p, m) {
            (function () {
              (function () {
                function e(t) {
                  const n = this.constructor;
                  return this.then(
                    (e) => n.resolve(t()).then(() => e),
                    (e) => n.resolve(t()).then(() => n.reject(e)),
                  );
                }
                function t(n) {
                  return new this((r, e) => {
                    if (!n || void 0 === n.length)
                      return e(
                        new TypeError(`${typeof n} ${n} is not iterable(cannot read property Symbol(Symbol.iterator))`),
                      );
                    const o = Array.prototype.slice.call(n);
                    if (o.length === 0) return r([]);
                    let i = o.length;
                    function u(t, e) {
                      if (e && (typeof e === 'object' || typeof e === 'function')) {
                        const n = e.then;
                        if (typeof n === 'function')
                          return void n.call(
                            e,
                            (e) => {
                              u(t, e);
                            },
                            (e) => {
                              (o[t] = { status: 'rejected', reason: e }), --i == 0 && r(o);
                            },
                          );
                      }
                      (o[t] = { status: 'fulfilled', value: e }), --i == 0 && r(o);
                    }
                    for (let t = 0; t < o.length; t++) u(t, o[t]);
                  });
                }
                const n = setTimeout;
                function c(e) {
                  return Boolean(e && void 0 !== e.length);
                }
                function r() {}
                function i(e) {
                  if (!(this instanceof i)) throw new TypeError('Promises must be constructed via new');
                  if (typeof e !== 'function') throw new TypeError('not a function');
                  (this._state = 0), (this._handled = !1), (this._value = void 0), (this._deferreds = []), f(e, this);
                }
                function o(n, r) {
                  for (; n._state === 3; ) n = n._value;
                  n._state !== 0
                    ? ((n._handled = !0),
                      i._immediateFn(() => {
                        const e = n._state === 1 ? r.onFulfilled : r.onRejected;
                        if (e !== null) {
                          let t;
                          try {
                            t = e(n._value);
                          } catch (e) {
                            return void s(r.promise, e);
                          }
                          u(r.promise, t);
                        } else (n._state === 1 ? u : s)(r.promise, n._value);
                      }))
                    : n._deferreds.push(r);
                }
                function u(t, e) {
                  try {
                    if (e === t) throw new TypeError('A promise cannot be resolved with itself.');
                    if (e && (typeof e === 'object' || typeof e === 'function')) {
                      const n = e.then;
                      if (e instanceof i) return (t._state = 3), (t._value = e), void a(t);
                      if (typeof n === 'function')
                        return void f(
                          (function (e, t) {
                            return function () {
                              e.apply(t, arguments);
                            };
                          })(n, e),
                          t,
                        );
                    }
                    (t._state = 1), (t._value = e), a(t);
                  } catch (e) {
                    s(t, e);
                  }
                }
                function s(e, t) {
                  (e._state = 2), (e._value = t), a(e);
                }
                function a(e) {
                  e._state === 2 &&
                    e._deferreds.length === 0 &&
                    i._immediateFn(() => {
                      e._handled || i._unhandledRejectionFn(e._value);
                    });
                  for (let t = 0, n = e._deferreds.length; t < n; t++) o(e, e._deferreds[t]);
                  e._deferreds = null;
                }
                function l(e, t, n) {
                  (this.onFulfilled = typeof e === 'function' ? e : null),
                    (this.onRejected = typeof t === 'function' ? t : null),
                    (this.promise = n);
                }
                function f(e, t) {
                  let n = !1;
                  try {
                    e(
                      (e) => {
                        n || ((n = !0), u(t, e));
                      },
                      (e) => {
                        n || ((n = !0), s(t, e));
                      },
                    );
                  } catch (e) {
                    if (n) return;
                    (n = !0), s(t, e);
                  }
                }
                (i.prototype.catch = function (e) {
                  return this.then(null, e);
                }),
                  (i.prototype.then = function (e, t) {
                    const n = new this.constructor(r);
                    return o(this, new l(e, t, n)), n;
                  }),
                  (i.prototype.finally = e),
                  (i.all = function (t) {
                    return new i((r, o) => {
                      if (!c(t)) return o(new TypeError('Promise.all accepts an array'));
                      const i = Array.prototype.slice.call(t);
                      if (i.length === 0) return r([]);
                      let u = i.length;
                      function s(t, e) {
                        try {
                          if (e && (typeof e === 'object' || typeof e === 'function')) {
                            const n = e.then;
                            if (typeof n === 'function')
                              return void n.call(
                                e,
                                (e) => {
                                  s(t, e);
                                },
                                o,
                              );
                          }
                          (i[t] = e), --u == 0 && r(i);
                        } catch (e) {
                          o(e);
                        }
                      }
                      for (let e = 0; e < i.length; e++) s(e, i[e]);
                    });
                  }),
                  (i.allSettled = t),
                  (i.resolve = function (t) {
                    return t && typeof t === 'object' && t.constructor === i
                      ? t
                      : new i((e) => {
                          e(t);
                        });
                  }),
                  (i.reject = function (n) {
                    return new i((e, t) => {
                      t(n);
                    });
                  }),
                  (i.race = function (o) {
                    return new i((e, t) => {
                      if (!c(o)) return t(new TypeError('Promise.race accepts an array'));
                      for (let n = 0, r = o.length; n < r; n++) i.resolve(o[n]).then(e, t);
                    });
                  }),
                  (i._immediateFn =
                    (typeof m === 'function' &&
                      function (e) {
                        m(e);
                      }) ||
                    function (e) {
                      n(e, 0);
                    }),
                  (i._unhandledRejectionFn = function (e) {
                    typeof console !== 'undefined' &&
                      console &&
                      console.warn('Possible Unhandled Promise Rejection:', e);
                  });
                const d = (function () {
                  if (typeof self !== 'undefined') return self;
                  if (typeof window !== 'undefined') return window;
                  if (void 0 !== p) return p;
                  throw new Error('unable to locate global object');
                })();
                typeof d.Promise !== 'function'
                  ? (d.Promise = i)
                  : d.Promise.prototype.finally
                  ? d.Promise.allSettled || (d.Promise.allSettled = t)
                  : (d.Promise.prototype.finally = e);
              })();
            }.call(this));
          }.call(
            this,
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {},
            e('timers').setImmediate,
          ));
        },
        { timers: 3 },
      ],
      3: [
        function (c, e, a) {
          (function (n, s) {
            (function () {
              const r = c('process/browser.js').nextTick;
              const e = Function.prototype.apply;
              const o = Array.prototype.slice;
              const i = {};
              let u = 0;
              function t(e, t) {
                (this._id = e), (this._clearFn = t);
              }
              (a.setTimeout = function () {
                return new t(e.call(setTimeout, window, arguments), clearTimeout);
              }),
                (a.setInterval = function () {
                  return new t(e.call(setInterval, window, arguments), clearInterval);
                }),
                (a.clearTimeout = a.clearInterval =
                  function (e) {
                    e.close();
                  }),
                (t.prototype.unref = t.prototype.ref = function () {}),
                (t.prototype.close = function () {
                  this._clearFn.call(window, this._id);
                }),
                (a.enroll = function (e, t) {
                  clearTimeout(e._idleTimeoutId), (e._idleTimeout = t);
                }),
                (a.unenroll = function (e) {
                  clearTimeout(e._idleTimeoutId), (e._idleTimeout = -1);
                }),
                (a._unrefActive = a.active =
                  function (e) {
                    clearTimeout(e._idleTimeoutId);
                    const t = e._idleTimeout;
                    t >= 0 &&
                      (e._idleTimeoutId = setTimeout(() => {
                        e._onTimeout && e._onTimeout();
                      }, t));
                  }),
                (a.setImmediate =
                  typeof n === 'function'
                    ? n
                    : function (e) {
                        const t = u++;
                        const n = !(arguments.length < 2) && o.call(arguments, 1);
                        return (
                          (i[t] = !0),
                          r(() => {
                            i[t] && (n ? e.apply(null, n) : e.call(null), a.clearImmediate(t));
                          }),
                          t
                        );
                      }),
                (a.clearImmediate =
                  typeof s === 'function'
                    ? s
                    : function (e) {
                        delete i[e];
                      });
            }.call(this));
          }.call(this, c('timers').setImmediate, c('timers').clearImmediate));
        },
        { 'process/browser.js': 1, timers: 3 },
      ],
      4: [
        function (e, t, n) {
          Object.defineProperty(n, '__esModule', { value: !0 }),
            (n.EmailJSResponseStatus = n.sendForm = n.send = n.init = void 0);
          const s = e('./models/EmailJSResponseStatus');
          Object.defineProperty(n, 'EmailJSResponseStatus', {
            enumerable: !0,
            get() {
              return s.EmailJSResponseStatus;
            },
          });
          const i = e('./services/ui/UI');
          let u = null;
          let c = 'https://api.emailjs.com';
          function a(o, i, u) {
            return (
              void 0 === u && (u = {}),
              new Promise((n, r) => {
                const e = new XMLHttpRequest();
                for (const t in (e.addEventListener('load', (e) => {
                  const t = new s.EmailJSResponseStatus(e.target);
                  t.status === 200 || t.text === 'OK' ? n(t) : r(t);
                }),
                e.addEventListener('error', (e) => {
                  r(new s.EmailJSResponseStatus(e.target));
                }),
                e.open('POST', o, !0),
                u))
                  e.setRequestHeader(t, u[t]);
                e.send(i);
              })
            );
          }
          function r(e, t) {
            (u = e), (c = t || 'https://api.emailjs.com');
          }
          function o(e, t, n, r) {
            const o = {
              lib_version: '2.6.4',
              user_id: r || u,
              service_id: e,
              template_id: t,
              template_params: (function (e) {
                let t = document && document.getElementById('g-recaptcha-response');
                return t && t.value && (e['g-recaptcha-response'] = t.value), (t = null), e;
              })(n),
            };
            return a(`${c}/api/v1.0/email/send`, JSON.stringify(o), { 'Content-type': 'application/json' });
          }
          function l(e, t, n, r) {
            if (
              (typeof n === 'string' &&
                (n = document.querySelector(
                  (function (e) {
                    return e[0] !== '#' && e[0] !== '.' ? `#${e}` : e;
                  })(n),
                )),
              !n || n.nodeName !== 'FORM')
            )
              throw 'Expected the HTML form element or the style selector of form';
            i.UI.progressState(n);
            const o = new FormData(n);
            return (
              o.append('lib_version', '2.6.4'),
              o.append('service_id', e),
              o.append('template_id', t),
              o.append('user_id', r || u),
              a(`${c}/api/v1.0/email/send-form`, o).then(
                (e) => (i.UI.successState(n), e),
                (e) => (i.UI.errorState(n), Promise.reject(e)),
              )
            );
          }
          (n.init = r), (n.send = o), (n.sendForm = l), (n.default = { init: r, send: o, sendForm: l });
        },
        { './models/EmailJSResponseStatus': 5, './services/ui/UI': 6 },
      ],
      5: [
        function (e, t, n) {
          Object.defineProperty(n, '__esModule', { value: !0 }), (n.EmailJSResponseStatus = void 0);
          const r = function (e) {
            (this.status = e.status), (this.text = e.responseText);
          };
          n.EmailJSResponseStatus = r;
        },
        {},
      ],
      6: [
        function (e, t, n) {
          Object.defineProperty(n, '__esModule', { value: !0 }), (n.UI = void 0);
          const r = (function () {
            function e() {}
            return (
              (e.clearAll = function (e) {
                e.classList.remove(this.PROGRESS), e.classList.remove(this.DONE), e.classList.remove(this.ERROR);
              }),
              (e.progressState = function (e) {
                this.clearAll(e), e.classList.add(this.PROGRESS);
              }),
              (e.successState = function (e) {
                e.classList.remove(this.PROGRESS), e.classList.add(this.DONE);
              }),
              (e.errorState = function (e) {
                e.classList.remove(this.PROGRESS), e.classList.add(this.ERROR);
              }),
              (e.PROGRESS = 'emailjs-sending'),
              (e.DONE = 'emailjs-success'),
              (e.ERROR = 'emailjs-error'),
              e
            );
          })();
          n.UI = r;
        },
        {},
      ],
    },
    {},
    [4, 2],
  )(4),
);
